name: "ndc-python-lambda connector"
on:
  pull_request:
    branches:
      - main
      - test-ci/**
  push:
    branches:
      - 'main'
      - test-ci/**
    tags:
      - v**

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKER_IMAGE_NAME: hasura/ndc-python-lambda

jobs:
  build-and-test:
    name: Build and test ndc-lambda-sdk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run tests
        run: |
          if command -v pytest &> /dev/null; then
            pytest
          else
            echo "pytest not found, skipping tests"
          fi

  build-connector:
    name: Build connector
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # This is important for git describe to work correctly
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Build connector
        run: |
          cd connector-definition
          make build
      - name: Debug information
        run: |
          echo "Contents of connector-definition/dist:"
          ls -la connector-definition/dist
          echo "Contents of connector-definition/dist/.hasura-connector:"
          ls -la connector-definition/dist/.hasura-connector
      - uses: actions/upload-artifact@v4
        with:
          name: connector-definition
          path: ./connector-definition/dist
          compression-level: 0 # Already compressed

  build-and-push-docker:
    name: Build and push Docker image
    needs: build-connector
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
            registry: ${{ env.DOCKER_REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: docker-metadata
        uses: docker/metadata-action@v5
        with:
            images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
            context: .
            push: true
            platforms: linux/amd64,linux/arm64
            tags: ${{ steps.docker-metadata.outputs.tags }}
            labels: ${{ steps.docker-metadata.outputs.labels }}
  
  release-connector:
    name: Release connector
    runs-on: ubuntu-latest
    needs:
      - build-and-test
      - build-connector
      - build-and-push-docker
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - name: Download connector definition
        uses: actions/download-artifact@v4
        with:
          name: connector-definition
          path: ./connector-definition/dist
      - name: Get version from tag
        id: get-version
        run: |
          echo "tagged_version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        shell: bash
      - uses: mindsers/changelog-reader-action@v2
        id: changelog-reader
        with:
          version: ${{ steps.get-version.outputs.tagged_version }}
          path: ./CHANGELOG.md
      - uses: softprops/action-gh-release@v1
        with:
          draft: false
          tag_name: v${{ steps.get-version.outputs.tagged_version }}
          body: ${{ steps.changelog-reader.outputs.changes }}
          files: |
            ./connector-definition/dist/connector-definition.tgz
          fail_on_unmatched_files: true