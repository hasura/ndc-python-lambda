name: "ndc-python-lambda connector"
on:
  pull_request:
    branches:
      - main
      - test-ci/**
  push:
    branches:
      - 'main'
      - test-ci/**
    tags:
      - v**

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKER_IMAGE_NAME: hasura/ndc-python-lambda

jobs:
  build-and-test:
    name: Build and test ndc-lambda-sdk
    defaults:
      run:
        working-directory: ./ndc-lambda-sdk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: pytest

  docker:
    name: Build base docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: docker-metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
          tags: ${{ steps.docker-metadata.outputs.tags }}
          labels: ${{ steps.docker-metadata.outputs.labels }}

  release-connector:
    name: Release connector
    defaults:
      run:
        working-directory: ./connector-definition
    runs-on: ubuntu-latest
    needs:
      - build-and-test
      - docker
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Build connector definition
        run: make build
      - uses: actions/upload-artifact@v4
        with:
          name: connector-definition.tgz
          path: ./connector-definition/dist/connector-definition.tgz
          compression-level: 0 # Already compressed
      - name: Get version from tag
        id: get-version
        run: |
          echo "tagged_version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        shell: bash
      - uses: mindsers/changelog-reader-action@v2
        id: changelog-reader
        with:
          version: ${{ steps.get-version.outputs.tagged_version }}
          path: ./CHANGELOG.md
      - uses: softprops/action-gh-release@v1
        with:
          draft: false
          tag_name: v${{ steps.get-version.outputs.tagged_version }}
          body: ${{ steps.changelog-reader.outputs.changes }}
          files: |
            ./connector-definition/dist/connector-definition.tgz
          fail_on_unmatched_files: true